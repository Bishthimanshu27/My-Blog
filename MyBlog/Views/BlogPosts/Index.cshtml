@using PagedList;
@using PagedList.Mvc;

@model IEnumerable<MyBlog.Models.BlogPost>

@{
    ViewBag.Title = "Index";
    var pagedList = (IPagedList)Model;

}

<link href="~/Content/styles.css" rel="stylesheet" />

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<div class="container">
    <h2>Index</h2>

    <p>
        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        {
            @Html.ActionLink("Create New", "Create")
        }

    </p>

    
@using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get))
{
    <input type="text" class="form-control" name="searchString" placeholder="Search for posts" value="@ViewBag.SearchString"/>
    <input type="submit" class="btn btn-primary" value="Search!" />
}
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MediaUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Published)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MediaUrl)
                </td>
                <td>
                    @if (item.MediaUrl != null)
                    {

                        <img class="img-responsive" src="@item.MediaUrl" alt="">
                    }
                <td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || (User.IsInRole("Moderrator"))))
                            {
                              @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                              @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                             }

                    @Html.ActionLink("Details", "DetailsSlug", new { slug = item.Slug }) 
                  
                </td>
            </tr>
        }

    </table>
</div>

<div class="container">
    Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
    @Html.PagedListPager(pagedList, page => Url.Action("Index", new { page, ViewBag.SearchString }))

</div>